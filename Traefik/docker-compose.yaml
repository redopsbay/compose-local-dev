version: "3"
services:
  # Traefik proxy will be the frontend or edge router of your container services
  traefik-proxy:
    image: traefik:v3.0
    container_name: traefik-proxy
    command:
      - --api.insecure=true
      - --providers.docker
      - --entrypoints.http.address=:80
    # Expose port `80` on your machine
    ports:
      - "80:80"
    volumes: # give traefik-proxy access into docker.sock
      - /var/run/docker.sock:/var/run/docker.sock
  # `user-api` running port `8080`
  user-api:
    image: user-api:latest
    build:
      context: user
      dockerfile: Dockerfile
    container_name: user-api
    labels:
      - traefik.enable=true
      - traefik.http.services.user-api.loadbalancer.server.port=8000
      - traefik.http.routers.user-api.rule=Host(`api.redopsbay.dev`) && PathPrefix(`/user`)
      - traefik.http.routers.user-api.entrypoints=http
      - traefik.http.middlewares.user-api.stripprefix.prefixes=/user
      - traefik.http.routers.user-api.middlewares=user-api
      # using `http` entrypoint that utilizes port `80`
    ports:
      - 8000
  # `product-api` running port `80`
  product-api:
    image: product-api:latest
    build:
      context: product
      dockerfile: Dockerfile
    container_name: product-api
    labels:
      - traefik.enable=true
      - traefik.http.services.product-api.loadbalancer.server.port=8000
      - traefik.http.routers.product-api.rule=Host(`api.redopsbay.dev`) && PathPrefix(`/product`)
      - traefik.http.routers.product-api.entrypoints=http
      - traefik.http.middlewares.product-api.stripprefix.prefixes=/product
      - traefik.http.routers.product-api.middlewares=product-api
      # using `http` entrypoint also that utilizes port `80`
    ports:
      - 8000